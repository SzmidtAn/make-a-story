{"version":3,"sources":["reportWebVitals.js","WordItem.js","WordsList.js","TextView.js","Pages/GamePage.js","Pages/Home.js","Pages/CreateNewGamePage.js","Pages/GameCodeViewPage.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","WordItem","title","showItemsDescription","className","onClick","WordItemDescription","description","pronunciation","WordsList","this","props","contacts","map","wordTowordItem","React","Component","TextView","placeholder","GamePage","state","getWord","getDetailsToThisWord","handleInputChange","e","setState","i","getJsonFromApi","index","getIndex","target","textContent","findIndex","obj","word","component","definition","document","body","style","backgroundColor","fetch","res","json","concat","location","gameCode","type","Home","code","length","history","push","pathname","to","value","onChange","handleInput","startGameWithCode","CreateNewGamePage","level","goToCode","GameCodeViewPage","Math","floor","random","App","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9166f539.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const WordItem = ({title, showItemsDescription}) => {\n    return (\n            <div className=\"wordItem\" onClick={showItemsDescription}>\n                <h2 className=\"header\">{title}</h2>\n            </div>\n    );\n};\n\nexport const WordItemDescription = ({title, description, pronunciation }) => {\n\n    return (\n            <div className=\"itemDetail\">\n                <h1 className=\"header\">{title}</h1>\n                <h2 className=\"pronunciation\">{pronunciation}</h2>\n                <p className=\"descriptionItem\">Definition: {description}</p>\n            </div>\n    );\n};","import React from \"react\";\nimport {WordItem} from \"./WordItem\";\n\nexport class WordsList extends React.Component {\n\n    render() {\n        return (\n            <div className=\"wordList\" >\n        {this.props.contacts.map(this.props.wordTowordItem)}\n            </div>\n            )\n    }\n\n}","import React from \"react\";\n\nexport class TextView extends React.Component {\n    render() {\n        return (\n            <div className=\"textArea\">\n                <input placeholder=\"Write your sentence here... You must to use given words!\" />\n            </div>\n        )\n    }\n}","import {WordsList} from \"../WordsList\";\nimport React from \"react\";\nimport {WordItem, WordItemDescription} from \"../WordItem\";\nimport {TextView} from \"../TextView\";\n\n\nexport class GamePage extends React.Component {\n    state = {\n        contacts: [],\n        getWord: \"\",\n        getDetailsToThisWord: false,\n    };\n\n    componentDidMount() {\n        this.handleInputChange()\n        document.body.style.backgroundColor = \"var(--red)\"\n\n    }\n\n\n\n    getJsonFromApi() {\n        fetch(\"https://random-words-api.vercel.app/word\")\n            .then(res => res.json())\n            .then(json =>\n            {this.setState({\n                    contacts: this.state.contacts.concat(json)\n                })}\n    );\n    }\n\n    handleInputChange = (e) => {\n        this.setState({\n            contacts: [],\n            getDetailsToThisWord: false,\n        })\n        for (let i = 0; i < 2; i++) {\n        this.getJsonFromApi(true)\n        }\n    }\n\n    showItemsDescription = (e) => {\n        const index = this.getIndex(e.target.textContent)\n        const getWord = this.state.contacts[index]\n            this.setState({\n                getWord: getWord,\n                getDetailsToThisWord: true,\n            })\n    }\n\n    getIndex = (title) => {\n        return this.state.contacts.findIndex(obj => obj.word === title);\n    }\n\n    wordTowordItem  = (word, component) => {\n        const title = word.word;\n        const description = word.definition;\n        const pronunciation = word.pronunciation;\n\n        switch (component){\n            case \"WordItemDescription\" :\n                return <WordItemDescription title= {title} description={description} pronunciation={pronunciation}  />;\n            default:\n                return <WordItem key={title} title={title} showItemsDescription={this.showItemsDescription}/>;\n\n        }\n    }\n\n\n    render() {\n        return (\n            <div className=\"gamePage\">\n\n                <div className=\"gamePageContainer\">\n                    <h1 className=\"gameCode\">{this.props.location.gameCode}</h1>\n                    <h1 className=\"lastSentence\">So we just had to show this shoes to this duck...</h1>\n\n                    <div >\n                 <WordsList contacts={this.state.contacts} wordTowordItem={this.wordTowordItem}  showItemsDescription={this.showItemsDescription} />\n\n                    </div>\n                </div>\n\n                    <div>\n                        {this.state.getDetailsToThisWord ?\n                            <div>\n                                {this.wordTowordItem(this.state.getWord, \"WordItemDescription\")}\n                            </div>  : \"\"}\n                    </div>\n                    <div>\n                        <TextView />\n                    </div>\n\n                <button className=\"btn blue circular\" type=\"button\">Done</button>\n\n            </div>\n        );\n    }\n\n\n\n}\n\n\n\n","import React from \"react\";\nimport '../App.css'\nimport {Link} from \"react-router-dom\";\n\n\n\nexport class Home extends React.Component {\n\n    componentDidMount() {\n        document.body.style.backgroundColor = \"var(--orange)\"\n    }\n\n    state = {\n      code: \"\"\n    };\n\n    startGameWithCode (code){\n\n        if (this.state.code.length === 6) {\n            this.props.history.push({\n                pathname: '/make-a-story/game',\n                gameCode: code\n            })\n        } else {\n            this.setState({\n                code: \"Game PIN must to have 6 siffror\"\n            })\n        }\n\n\n\n    }\n\n    render() {\n        return (\n\n\n                <div className=\"home\">\n           <h1>WHAT HAPPENS NEXT?</h1>\n                    <p>Generat code and share then with  your friends to build a funny story together!\n                        You have to add a new sentence with two given words and complete What Happens Next?\n\n                        <br/>\n                        <br/>\n                        You can choose of 3 levels of vocabulary - beginner, medium and advanced.\n                        <br/>\n                        <br/>\n                        To make it difficult you can just see the last sentence someone made and when the story is complete, you can read the whole.\n                        <br/>\n                        <br/>\n                        Improve your English and have fun!\n                        </p>\n\n                    <Link to=\"/make-a-story/create-new-game\">\n                    <button className=\"btn blue circular\"  >Create new game</button>\n                    </Link>\n                    <h3>Or do you already have code?</h3>\n                    <div className=\"gamePin\">\n\n                    <input placeholder=\"Game PIN\" value={this.state.code}  onChange={(e) => {this.handleInput(e)}}/>\n\n                    <button className=\"btn red  small\" onClick={ () => this.startGameWithCode(this.state.code)}>Enter</button>\n                    </div>\n\n                </div>\n\n\n\n        );\n    }\n\n\n    handleInput(e) {\n        if (this.state.code === \"Game PIN must to have 6 siffror\") {\n            this.setState({\n                code: \"\"\n            })\n        }else {\n\n            this.setState({\n                code: e.target.value\n            })\n        }\n\n\n\n    }\n}\n\n\n\n","import {Link, Redirect} from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\nimport React from \"react\";\n\n\nexport class CreateNewGamePage extends React.Component {\n\n\n\n    componentDidMount() {\n        document.body.style.backgroundColor = \"var(--orange)\"\n    }\n\n\n\n    goToCode (level){\n\n        this.props.history.push({\n            pathname: '/make-a-story/GameCodeViewPage',\n         level: level\n        })\n\n    }\n\n\n    render() {\n        return (\n\n\n            <div className=\"createNewGamePage\" >\n                <h1>Choose your level</h1>\n\n                <div>\n\n                    <div className=\"circle orangeDarkGradient\"> </div>\n                    <div className=\"card orangeDark\">\n                        <p>You want to learn English\n                            <br/>\n                            and your current level\n                            <br/>\n                            is BASIC</p>\n                        <button onClick={ () => this.goToCode(\"Beginner\")}>Beginner</button>\n\n                    </div>\n                </div>\n\n                <div>\n\n                    <div className=\"circle redGradient\"> </div>\n                <div className=\"card red\">\n                    <p>You can English\n                        <br/>\n                        and you want to practice\n                        <br/>\n                        with other\n                        </p>\n\n                    <button onClick={ () => this.goToCode(\"Medium\")}>Medium</button>\n                </div>\n                </div>\n\n                <div>\n\n                    <div className=\"circle blueGradient\"> </div>\n                    <div className=\"card blue\">\n                        <p>You are PRO\n                            <br/>\n                            and you want to learn\n                            <br/>\n                            new, difficult words</p>\n                        <button onClick={ () => this.goToCode(\"Advanced\")}>Advanced</button>\n                    </div>\n                </div>\n            </div>\n\n\n\n        );\n    }\n\n\n\n}\n\n\n","import {Link} from \"react-router-dom\";\nimport React from \"react\";\n\n\nexport class GameCodeViewPage  extends React.Component {\n\n    componentDidMount() {\n        document.body.style.backgroundColor = \"var(--orange)\"\n    }\n    goToCode (code){\n\n        this.props.history.push({\n            pathname: '/make-a-story/game',\n            gameCode: code\n        })\n\n    }\n\n    state = {\n        code: Math.floor(Math.random() * (999999 - 111111) + 111111)\n    }\n\n\n\n    render() {\n        return (\n\n\n            <div className=\"GameCodeView\">\n                game code vie page\n\n                <h2>Your code is:</h2>\n                <h1>\n                    { this.state.code   }           </h1>\n                <h3>Level: {this.props.location.level}</h3>\n\n                    <button className=\"btn blue circular\" onClick={ () => this.goToCode(this.state.code)}>Start</button>\n\n            </div>\n\n\n\n        );\n    }\n\n\n\n}\n\n\n","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link,\n    Redirect\n} from 'react-router-dom';\nimport {GamePage} from \"./Pages/GamePage\";\nimport {Home} from \"./Pages/Home\";\nimport {CreateNewGamePage} from \"./Pages/CreateNewGamePage\";\nimport {GameCodeViewPage} from \"./Pages/GameCodeViewPage\";\n\n\nexport class App extends React.Component {\n\n\n    render() {\n        return (\n            <Router>\n                <div className=\"appContainer\">\n                    <ul>\n                        <li>\n                            <Link to=\"/make-a-story/\">Home</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/make-a-story/game\">Game</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/make-a-story/create-new-game\">Create new game</Link>\n                        </li>\n                    </ul>\n\n                    <Route exact path=\"/make-a-story/\" component={Home} />\n                    <Route path=\"/make-a-story/game\" component={GamePage} />\n                    <Route path=\"/make-a-story/create-new-game\" component={CreateNewGamePage} />\n                    <Route path=\"/make-a-story/GameCodeViewPage\" component={GameCodeViewPage}  />\n                </div>\n\n\n            </Router>\n\n        );\n    }\n\n\n\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {App} from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}