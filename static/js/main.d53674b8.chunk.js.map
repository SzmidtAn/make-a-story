{"version":3,"sources":["reportWebVitals.js","WordItem.js","WordsList.js","Pages/GamePage.js","Pages/Home.js","Pages/CreateNewGamePage.js","Pages/GameCodeViewPage.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","WordItem","title","showItemsDescription","className","onClick","WordItemDescription","description","pronunciation","example","WordsList","this","props","contacts","map","wordTowordItem","React","Component","GamePage","state","getWord","getDetailsToThisWord","gameCode","lastSentence","newSentence","story","gameID","definition","level","diffDef","getNewWords","e","setState","setGameLevel","index","getIndex","target","textContent","word","getDefinitionFromApi","fetch","res","json","meanings","definitions","console","log","findDefinitionInWordnikAPI","undefined","text","findIndex","obj","component","getGameFromDB","codePIN","firebase","firestore","collection","where","get","game","forEach","doc","id","handleInput","value","submitNewSentence","length","checkIfSentenceHasGivenWords","toLowerCase","includes","saveToDB","location","document","body","style","background","concat","i","getJsonFromApi","getJsonFromApiAdvanced","navigateToHomePage","history","push","pathname","update","placeholder","onChange","type","Home","code","getDataFromDB","navigateToGamePage","to","startGameWithCode","CreateNewGamePage","backgroundColor","goToCode","GameCodeViewPage","Math","floor","random","createNewGame","event","add","gamePIN","toString","docRef","catch","error","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","App","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d53674b8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const WordItem = ({title, showItemsDescription}) => {\n    return (\n            <div className=\"wordItem\" onClick={showItemsDescription}>\n                <h2 className=\"header\">{title}</h2>\n            </div>\n    );\n};\n\nexport const WordItemDescription = ({title, description, pronunciation, example }) => {\n\n    return (\n            <div className=\"itemDetail\">\n                <h1 className=\"header\">{title}</h1>\n                <h2 className=\"pronunciation\">{pronunciation}</h2>\n                <p className=\"descriptionItem\">Definition: {description}</p>\n                <p className=\"descriptionItem\">Example: {example}</p>\n            </div>\n    );\n};","import React from \"react\";\nimport {WordItem} from \"./WordItem\";\n\nexport class WordsList extends React.Component {\n\n    render() {\n        return (\n            <div className=\"wordList\" >\n        {this.props.contacts.map(this.props.wordTowordItem)}\n            </div>\n            )\n    }\n\n}","import {WordsList} from \"../WordsList\";\nimport React from \"react\";\nimport {WordItem, WordItemDescription} from \"../WordItem\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\n\nexport class GamePage extends React.Component {\n    state = {\n        contacts: [],\n        getWord: \"\",\n        getDetailsToThisWord: false,\n        gameCode: \"\",\n        lastSentence: \"\",\n        newSentence: \"\",\n        story: \"\",\n        gameID: \"\",\n        definition: \"\",\n        example: \"\",\n        level: \"\",\n        diffDef: \"\",\n    };\n\n    componentDidMount() {\n        this.getGameFromDB(this.props.location.gameCode)\n        document.body.style.background = \"var(--redGradient)\"\n\n    }\n\n    getJsonFromApiAdvanced() {\n        fetch(\"https://random-words-api.vercel.app/word\")\n            .then(res => res.json())\n            .then(json =>\n                {this.setState({\n                    contacts: this.state.contacts.concat(json),\n                    diffDef: json.definition\n                })\n\n                }\n            );\n\n    }\n\n\n\n    getJsonFromApi() {\n\n        fetch(\"https://api.wordnik.com/v4/words.json/randomWord?hasDictionaryDef=true&maxCorpusCount=-1&minDictionaryCount=1&maxDictionaryCount=-1&minLength=5&maxLength=-1&api_key=8gs3fw3vcnv65zzemkox7s6b6kudb91pjc2kmlmaqhjvmpy1a\\n\")\n            .then(res => res.json())\n            .then(json =>\n                {this.setState({\n                    contacts: this.state.contacts.concat(json)\n                })}\n            );\n    }\n\n    getNewWords = (e) => {\n        this.setState({\n            contacts: [],\n            getDetailsToThisWord: false,\n        })\n\n        this.setGameLevel()\n\n\n    }\n\n    setGameLevel() {\n\n        let level = this.state.level\n\n\n        switch (level){\n            case \"Beginner\":\n                //get 2 easy words\n                for (let i = 0; i < 2; i++) {\n                    this.getJsonFromApi()\n                }\n                    break\n            case \"Intermediate\":\n                //get 1 and 1 easy and difficult\n                this.getJsonFromApi()\n                this.getJsonFromApiAdvanced()\n\n                    break\n            case \"Advanced\":\n                //get 2 difficult words\n                this.getJsonFromApiAdvanced()\n                this.getJsonFromApiAdvanced()\n                    break\n            default:\n                this.navigateToHomePage()\n        }\n    }\n\n    showItemsDescription = (e) => {\n\n\n        let index = this.getIndex(e.target.textContent)\n        let getWord = this.state.contacts[index].word\n\n        if (getWord !== this.state.getWord){\n\n        this.getDefinitionFromApi(getWord)\n\n\n        this.setState({\n            getWord: getWord,\n            getDetailsToThisWord: true,\n            example: \"\"\n\n\n        })\n        }else {\n            this.setState({\n            getDetailsToThisWord: !this.state.getDetailsToThisWord,\n\n\n            })\n        }\n    }\n\n    getDefinitionFromApi = (getWord) => {\n\n\n        fetch(\"https://api.dictionaryapi.dev/api/v2/entries/en_US/\" + getWord)\n            .then(res => res.json())\n            .then(json =>{\n\n\n                if (json.title !== \"No Definitions Found\"){\n\n\n                this.setState({\n               definition: json[0].meanings[0].definitions[0].definition + 1,\n               example: json[0].meanings[0].definitions[0].example\n\n                })\n                    console.log(json[0])\n\n                }else {\n\n                    this.findDefinitionInWordnikAPI(getWord)\n\n                }\n            }\n            );\n\n\n\n    }\n\n    findDefinitionInWordnikAPI = (getWord) => {\n\n\n            fetch(\" https://api.wordnik.com/v4/word.json/\" + getWord + \"/definitions?limit=200&includeRelated=false&useCanonical=false&includeTags=false&api_key=8gs3fw3vcnv65zzemkox7s6b6kudb91pjc2kmlmaqhjvmpy1a\")\n                .then(res => res.json())\n                .then(json =>{\n\n\n\n\n                    if (json[0] !== undefined){\n                        this.setState({\n                            definition: (json[0].text ? json[0].text : \"error\") +3\n                        })\n                    }else {\n\n                        this.setState({\n                            definition: this.state.diffDef + 4,\n\n                        })\n                    }\n                }\n                )\n            ;\n\n\n\n        }\n\n\n\n    getIndex = (title) => {\n        return this.state.contacts.findIndex(obj => obj.word === title);\n    }\n\n    wordTowordItem  = (word, component) => {\n        const title = word.word;\n        const description =this.state.definition;\n        const example = this.state.example;\n\n\n        switch (component){\n            case \"WordItemDescription\" :\n                return <WordItemDescription title= {title} description={description} example={example}  />;\n            default:\n                return <WordItem key={title} title={title} showItemsDescription={this.showItemsDescription}/>;\n\n        }\n    }\n\n    getGameFromDB =  (codePIN)=> {\n        const unsub = firebase\n            .firestore()\n            .collection(\"game\")\n            .where('gamePIN', '==', codePIN)\n            .get()\n            .then(game => {\n                game.forEach((doc) => {\n\n                    this.setState({\n                        gameCode: codePIN,\n                        lastSentence: doc.get(\"lastSentence\"),\n                        story: doc.get(\"story\"),\n                        gameID: doc.id,\n                        level: doc.get(\"level\")\n                    })\n\n                    this.getNewWords()\n\n                });\n            })\n\n\n    }\n\n    handleInput = (e) => {\n        this.setState({\n            newSentence: e.target.value\n        })\n    }\n\n    submitNewSentence = () => {\n        if (this.state.newSentence.length > 5 ){\n        this.checkIfSentenceHasGivenWords()\n        }\n    }\n\n    navigateToHomePage() {\n        this.props.history.push({\n            pathname: '/make-a-story/'})\n    }\n\n    checkIfSentenceHasGivenWords = () => {\n\n        if (this.state.newSentence.toLowerCase().includes(this.state.contacts[0].word.toLowerCase()) && this.state.newSentence.toLowerCase().includes(this.state.contacts[1].word.toLowerCase())  ){\n            this.saveToDB()\n        }else {\n            this.setState({\n                newSentence: \"You must to use all given words!\"\n            })\n        }\n\n    }\n\n    saveToDB(){\n        firebase\n            .firestore()\n            .collection(\"game\")\n            .doc(this.state.gameID)\n            .update({\n                \"lastSentence\" : this.state.newSentence,\n                \"story\" :  this.state.story + \" \" + this.state.newSentence\n            })\n            .then(() => {\n                this.navigateToHomePage()\n\n            });\n\n    }\n\n    render() {\n        return (\n            <div className=\"gamePage\">\n\n                <div className=\"gamePageContainer\">\n                    <h1 className=\"gameCode\">{this.state.gameCode}</h1>\n                    <p>This is the last<br/> sentence someone wrote<br/> in your story &darr;</p>\n                    <h1 className=\"lastSentence\">{this.state.lastSentence}</h1>\n\n                    <div >\n                        {this.state.contacts.length !== 100?   <WordsList contacts={this.state.contacts} wordTowordItem={this.wordTowordItem}  showItemsDescription={this.showItemsDescription} />\n                            : \"Loading...\" }\n\n                    </div>\n                </div>\n\n                <div>\n                    {this.state.getDetailsToThisWord ?\n                        <div>\n                            {this.wordTowordItem(this.state.getWord, \"WordItemDescription\")}\n                        </div>  : \"\"}\n                </div>\n                <div className=\"textArea\">\n                    <input placeholder=\"Write your sentence here... You must use the given words!\"\n                           value={this.state.newSentence} onClick={this.handleInput}  onChange={(e) => {this.handleInput(e)}}/>\n\n                </div>\n\n                <button className=\"btn blue circular\" type=\"button\" onClick={this.submitNewSentence}>Done</button>\n\n            </div>\n        );\n    }\n\n\n    findDefinitionForDifficultWord(getWord) {\n\n    }\n}\n\n","import React from \"react\";\nimport '../App.css'\nimport {Link} from \"react-router-dom\";\nimport firebase from \"firebase\";\n\n\n\nexport class Home extends React.Component {\n\n    componentDidMount() {\n        document.body.style.background = \"var(--orangeGradient)\"\n    }\n\n    state = {\n      code: \"\"\n    };\n\n    getDataFromDB =  (codePIN)=> {\n        const unsub = firebase\n            .firestore()\n            .collection(\"game\")\n            .where('gamePIN', '==', codePIN)\n            .get()\n            .then(game => {\n                game.forEach((doc) => {\n              this.navigateToGamePage(codePIN)\n                });\n            })\n            .then(\n                this.setState({\n                    code: \"Incorrect Game PIN\"\n                })\n            );\n    }\n\n    startGameWithCode (code){\n\n        if (this.state.code.length === 6) {\n        this.getDataFromDB(code)\n        } else {\n            this.setState({\n                code: \"Game PIN must contains 6 digits\"\n            })\n        }\n    }\n\n    navigateToGamePage = (codePIN) => {\n        this.props.history.push({\n            pathname: '/make-a-story/game',\n            gameCode: codePIN\n        })\n    }\n\n\n    handleInput(e) {\n        if (this.state.code === \"Game PIN must contains 6 digits\" || this.state.code === \"Incorrect Game PIN\")  {\n            this.setState({\n                code: \"\"\n            })\n        } else {\n\n            this.setState({\n                code: e.target.value\n            })\n        }\n    }\n\n    render() {\n        return (\n\n\n                <div className=\"home\">\n           <h1>WHAT HAPPENS NEXT?</h1>\n\n                    <p>\n                        Generate the code and share it with your friends to create a fun story together! You need to add a new sentence with two given words and complete What Happens Next?\n                        <br/>\n                        <br/>\n                        You can choose from 3 vocabulary levels - Beginner, Intermediate and Advanced.\n                        <br/>\n                        <br/>\n                        To make it harder you can only see the last sentence someone wrote, and when the story is complete you can read the whole thing.\n                        <br/>\n                        <br/>\n                        Improve your English and have fun!\n                    </p>\n\n\n                    <Link to=\"/make-a-story/create-new-game\">\n                    <button className=\"btn blue circular\"  >Create new game</button>\n                    </Link>\n                    <h3>Or do you already have code?</h3>\n                    <div className=\"gamePin\">\n\n                    <input placeholder=\"Game PIN\" value={this.state.code}  onClick={(e) => {this.handleInput(e)}} onChange={(e) => {this.handleInput(e)}}/>\n\n                    <button className=\"btn red small\" onClick={ () => this.startGameWithCode(this.state.code)}>Enter</button>\n                    </div>\n\n                </div>\n\n\n\n        );\n    }\n\n\n}\n\n\n\n","import {Link, Redirect} from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\nimport React from \"react\";\n\n\nexport class CreateNewGamePage extends React.Component {\n\n\n\n    componentDidMount() {\n        document.body.style.backgroundColor = \"var(--orange)\"\n    }\n\n\n\n    goToCode (level){\n\n        this.props.history.push({\n            pathname: '/make-a-story/GameCodeViewPage',\n         level: level\n        })\n\n    }\n\n\n    render() {\n        return (\n\n\n            <div className=\"createNewGamePage\" >\n                <h1>Select your level</h1>\n\n                <div>\n\n                    <div className=\"circle blueGradient\"> </div>\n                    <div className=\"card blue\">\n                        <p>You want learn English\n                            <br/>\n                            and your current level\n                            <br/>\n                            is BASIC</p>\n                        <button onClick={ () => this.goToCode(\"Beginner\")}>Beginner</button>\n\n                    </div>\n                </div>\n\n                <div>\n\n                    <div className=\"circle redGradient\"> </div>\n                <div className=\"card red\">\n                    <p>You can speak English\n                        <br/>\n                        and want to practice\n                        <br/>\n                        with other people</p>\n\n\n                    <button onClick={ () => this.goToCode(\"Intermediate\")}>Intermediate</button>\n                </div>\n                </div>\n\n                <div>\n\n                    <div className=\"circle orangeDarkGradient\"> </div>\n                    <div className=\"card orangeDark\">\n                        <p>You are PRO\n                            <br/>\n                            and you want to learn\n                            <br/>\n                            new, difficult words</p>\n                        <button onClick={ () => this.goToCode(\"Advanced\")}>Advanced</button>\n                    </div>\n                </div>\n            </div>\n\n\n\n        );\n    }\n\n\n\n}\n\n\n","import {Link} from \"react-router-dom\";\nimport React from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\n\nexport class GameCodeViewPage  extends React.Component {\n\n    componentDidMount() {\n        document.body.style.backgroundColor = \"var(--orange)\"\n    }\n    goToCode (code){\n\n        this.createNewGame()\n\n\n\n    }\n\n    state = {\n        code: Math.floor(Math.random() * (999999 - 111111) + 111111)\n    }\n\n    createNewGame = event => {\n        var db = firebase.firestore();\n\n        db.collection(\"game\").add({\n            gamePIN: this.state.code.toString(),\n            level: this.props.location.level,\n            story: \"\"\n        })\n            .then((docRef) => {\n                this.props.history.push({\n                    pathname: '/make-a-story/game',\n                    gameCode: this.state.code.toString()\n                })\n            })\n            .catch((error) => {\n                console.error(\"Error adding document: \", error);\n            });\n\n    };\n\n\n\n    render() {\n        return (\n\n\n            <div className=\"GameCodeView\">\n\n                <h2>Your Game PIN is:</h2>\n                <h1> { this.state.code   }           </h1>\n                <h3>Level: {this.props.location.level}</h3>\n\n                    <button className=\"btn blue circular\" onClick={ () => this.goToCode(this.state.code)}>Start</button>\n\n            </div>\n\n\n\n        );\n    }\n\n\n\n}\n\n\n","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link,\n    Redirect\n} from 'react-router-dom';\nimport {GamePage} from \"./Pages/GamePage\";\nimport {Home} from \"./Pages/Home\";\nimport {CreateNewGamePage} from \"./Pages/CreateNewGamePage\";\nimport {GameCodeViewPage} from \"./Pages/GameCodeViewPage\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCwnpHYoYR1rqd79iASD08rTkS1gd6ZPkw\",\n    authDomain: \"make-a-story.firebaseapp.com\",\n    projectId: \"make-a-story\",\n    storageBucket: \"make-a-story.appspot.com\",\n    messagingSenderId: \"737035725955\",\n    appId: \"1:737035725955:web:4746258ce6d0a32312ffb6\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nvar db = firebase.firestore();\n\nexport default firebase;\n\n\n\nexport class App extends React.Component {\n\n\n    render() {\n        return (\n            <Router>\n                <div className=\"appContainer\">\n                    <ul>\n                        <li>\n                            <Link to=\"/make-a-story/\">Home</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/make-a-story/game\">Game</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/make-a-story/create-new-game\">Create new game</Link>\n                        </li>\n                    </ul>\n\n                    <Route exact path=\"/make-a-story/\" component={Home} />\n                    <Route path=\"/make-a-story/game\" component={GamePage} />\n                    <Route path=\"/make-a-story/create-new-game\" component={CreateNewGamePage} />\n                    <Route path=\"/make-a-story/GameCodeViewPage\" component={GameCodeViewPage}  />\n                </div>\n\n\n            </Router>\n\n        );\n    }\n\n\n\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {App} from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}