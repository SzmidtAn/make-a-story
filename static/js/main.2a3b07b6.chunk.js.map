{"version":3,"sources":["reportWebVitals.js","WordItem.js","WordsList.js","Pages/GamePage.js","Pages/Home.js","Pages/CreateNewGamePage.js","Pages/GameCodeViewPage.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","WordItem","title","showItemsDescription","className","onClick","WordItemDescription","description","pronunciation","WordsList","this","props","contacts","map","wordTowordItem","React","Component","GamePage","state","getWord","getDetailsToThisWord","gameCode","lastSentence","newSentence","story","getNewWords","e","setState","i","getJsonFromApi","index","getIndex","target","textContent","findIndex","obj","word","component","definition","getGameFromDB","codePIN","firebase","firestore","collection","where","get","game","forEach","doc","handleInput","value","submitNewSentence","update","console","log","navigateToHomePage","location","document","body","style","backgroundColor","fetch","res","json","concat","history","push","pathname","length","placeholder","onChange","type","Home","code","getDataFromDB","navigateToGamePage","to","startGameWithCode","CreateNewGamePage","level","goToCode","GameCodeViewPage","Math","floor","random","createNewGame","event","db","add","gamePIN","toString","docRef","id","catch","error","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","App","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"yMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,sDCPDQ,EAAW,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,qBAC7B,OACQ,qBAAKC,UAAU,WAAWC,QAASF,EAAnC,SACI,oBAAIC,UAAU,SAAd,SAAwBF,OAK3BI,EAAsB,SAAC,GAA0C,IAAzCJ,EAAwC,EAAxCA,MAAOK,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,cAErD,OACQ,sBAAKJ,UAAU,aAAf,UACI,oBAAIA,UAAU,SAAd,SAAwBF,IACxB,oBAAIE,UAAU,gBAAd,SAA+BI,IAC/B,oBAAGJ,UAAU,kBAAb,yBAA4CG,SCX/CE,EAAb,4JAEI,WACI,OACI,qBAAKL,UAAU,WAAf,SACHM,KAAKC,MAAMC,SAASC,IAAIH,KAAKC,MAAMG,sBAL5C,GAA+BC,IAAMC,W,QCIxBC,G,MAAb,4MACIC,MAAQ,CACJN,SAAU,GACVO,QAAS,GACTC,sBAAsB,EACtBC,SAAU,GACVC,aAAc,GACdC,YAAa,GACbC,MAAO,IARf,EA8BIC,YAAc,SAACC,GACX,EAAKC,SAAS,CACVf,SAAU,GACVQ,sBAAsB,IAE1B,IAAK,IAAIQ,EAAI,EAAGA,EAAI,EAAGA,IACvB,EAAKC,gBAAe,IApC5B,EAwCI1B,qBAAuB,SAACuB,GACpB,IAAMI,EAAQ,EAAKC,SAASL,EAAEM,OAAOC,aAC/Bd,EAAU,EAAKD,MAAMN,SAASkB,GAChC,EAAKH,SAAS,CACVR,QAASA,EACTC,sBAAsB,KA7CtC,EAiDIW,SAAW,SAAC7B,GACR,OAAO,EAAKgB,MAAMN,SAASsB,WAAU,SAAAC,GAAG,OAAIA,EAAIC,OAASlC,MAlDjE,EAqDIY,eAAkB,SAACsB,EAAMC,GACrB,IAAMnC,EAAQkC,EAAKA,KACb7B,EAAc6B,EAAKE,WACnB9B,EAAgB4B,EAAK5B,cAE3B,OAAQ6B,GACJ,IAAK,sBACD,OAAO,cAAC,EAAD,CAAqBnC,MAAQA,EAAOK,YAAaA,EAAaC,cAAeA,IACxF,QACI,OAAO,cAAC,EAAD,CAAsBN,MAAOA,EAAOC,qBAAsB,EAAKA,sBAAhDD,KA9DtC,EAmEIqC,cAAiB,SAACC,GACJC,IACTC,YACAC,WAAW,QACXC,MAAM,UAAW,KAAMJ,GACvBK,MACAlD,MAAK,SAAAmD,GACFA,EAAKC,SAAQ,SAACC,GAEZ,EAAKrB,SAAS,CACVN,SAAUmB,EACVlB,aAAc0B,EAAIH,IAAI,gBACtBrB,MAAOwB,EAAIH,IAAI,kBA/EjC,EAuFII,YAAc,SAACvB,GACX,EAAKC,SAAS,CACVJ,YAAaG,EAAEM,OAAOkB,SAzFlC,EA6FIC,kBAAoB,WAEhBV,IACKC,YACAC,WAAW,QACXK,IAAI,wBACJI,OAAO,CACT,aAAiB,EAAKlC,MAAMK,YACvB,MAAW,EAAKL,MAAMM,MAAQ,IAAM,EAAKN,MAAMK,cAElD5B,MAAK,WACF0D,QAAQC,IAAI,qCAGpB,EAAKC,sBA3Gb,uDAWI,WACI7C,KAAKe,cACLf,KAAK6B,cAAc7B,KAAKC,MAAM6C,SAASnC,UACvCoC,SAASC,KAAKC,MAAMC,gBAAkB,eAd9C,4BAoBI,WAAkB,IAAD,OACbC,MAAM,4CACDlE,MAAK,SAAAmE,GAAG,OAAIA,EAAIC,UAChBpE,MAAK,SAAAoE,GACL,EAAKpC,SAAS,CACPf,SAAU,EAAKM,MAAMN,SAASoD,OAAOD,UAzBzD,gCA+GI,WACIrD,KAAKC,MAAMsD,QAAQC,KAAK,CACpBC,SAAU,qBAjHtB,oBAoHI,WAAU,IAAD,OACL,OACI,sBAAK/D,UAAU,WAAf,UAEI,sBAAKA,UAAU,oBAAf,UACI,oBAAIA,UAAU,WAAd,SAA0BM,KAAKQ,MAAMG,WACrC,iDAAmB,uBAAnB,0BAA+C,uBAA/C,2BACA,oBAAIjB,UAAU,eAAd,SAA8BM,KAAKQ,MAAMI,eAEzC,8BACoC,IAA/BZ,KAAKQ,MAAMN,SAASwD,OAAiB,cAAC,EAAD,CAAWxD,SAAUF,KAAKQ,MAAMN,SAAUE,eAAgBJ,KAAKI,eAAiBX,qBAAsBO,KAAKP,uBAC/I,kBAKN,8BACKO,KAAKQ,MAAME,qBACR,8BACKV,KAAKI,eAAeJ,KAAKQ,MAAMC,QAAS,yBACnC,KAEtB,qBAAKf,UAAU,WAAf,SACI,uBAAOiE,YAAY,4DACZnB,MAAOxC,KAAKQ,MAAMK,YAAc+C,SAAU,SAAC5C,GAAO,EAAKuB,YAAYvB,QAI9E,wBAAQtB,UAAU,oBAAoBmE,KAAK,SAASlE,QAASK,KAAKyC,kBAAlE,yBAhJhB,GAA8BpC,IAAMC,Y,gBCAvBwD,EAAb,4MAMItD,MAAQ,CACNuD,KAAM,IAPZ,EAUIC,cAAiB,SAAClC,GACAC,IACTC,YACAC,WAAW,QACXC,MAAM,UAAW,KAAMJ,GACvBK,MACAlD,MAAK,SAAAmD,GACFA,EAAKC,SAAQ,SAACC,GAChB,EAAK2B,mBAAmBnC,SAGzB7C,KACG,EAAKgC,SAAS,CACV8C,KAAM,yBAvB1B,EAuCIE,mBAAqB,SAACnC,GAClB,EAAK7B,MAAMsD,QAAQC,KAAK,CACpBC,SAAU,qBACV9C,SAAUmB,KA1CtB,uDAEI,WACIiB,SAASC,KAAKC,MAAMC,gBAAkB,kBAH9C,+BA4BI,SAAmBa,GAEgB,IAA3B/D,KAAKQ,MAAMuD,KAAKL,OACpB1D,KAAKgE,cAAcD,GAEf/D,KAAKiB,SAAS,CACV8C,KAAM,sCAlCtB,yBA+CI,SAAY/C,GACgB,oCAApBhB,KAAKQ,MAAMuD,MAAkE,uBAApB/D,KAAKQ,MAAMuD,KACpE/D,KAAKiB,SAAS,CACV8C,KAAM,KAIV/D,KAAKiB,SAAS,CACV8C,KAAM/C,EAAEM,OAAOkB,UAvD/B,oBA4DI,WAAU,IAAD,OACL,OAGQ,sBAAK9C,UAAU,OAAf,UACL,oDAES,qMAEI,uBACA,uBAHJ,iFAKI,uBACA,uBANJ,mIAQI,uBACA,uBATJ,wCAcA,cAAC,IAAD,CAAMwE,GAAG,gCAAT,SACA,wBAAQxE,UAAU,oBAAlB,+BAEA,8DACA,sBAAKA,UAAU,UAAf,UAEA,uBAAOiE,YAAY,WAAWnB,MAAOxC,KAAKQ,MAAMuD,KAAOpE,QAAS,SAACqB,GAAO,EAAKuB,YAAYvB,IAAK4C,SAAU,SAAC5C,GAAO,EAAKuB,YAAYvB,MAEjI,wBAAQtB,UAAU,iBAAiBC,QAAU,kBAAM,EAAKwE,kBAAkB,EAAK3D,MAAMuD,OAArF,6BAzFpB,GAA0B1D,IAAMC,WCDnB8D,EAAb,uKAII,WACIrB,SAASC,KAAKC,MAAMC,gBAAkB,kBAL9C,sBAUI,SAAUmB,GAENrE,KAAKC,MAAMsD,QAAQC,KAAK,CACpBC,SAAU,iCACbY,MAAOA,MAdhB,oBAoBI,WAAU,IAAD,OACL,OAGI,sBAAK3E,UAAU,oBAAf,UACI,mDAEA,sBAAKA,UAAU,aAAf,UAEI,qBAAKA,UAAU,4BAAf,eACA,sBAAKA,UAAU,kBAAf,UACI,0DACI,uBADJ,yBAGI,uBAHJ,cAKA,wBAAQC,QAAU,kBAAM,EAAK2E,SAAS,aAAtC,4BAKR,gCAEI,qBAAK5E,UAAU,qBAAf,eACJ,sBAAKA,UAAU,WAAf,UACI,sDACI,uBADJ,uBAGI,uBAHJ,uBAOA,wBAAQC,QAAU,kBAAM,EAAK2E,SAAS,iBAAtC,gCAIJ,gCAEI,qBAAK5E,UAAU,sBAAf,eACA,sBAAKA,UAAU,YAAf,UACI,4CACI,uBADJ,wBAGI,uBAHJ,0BAKA,wBAAQC,QAAU,kBAAM,EAAK2E,SAAS,aAAtC,mCAjExB,GAAuCjE,IAAMC,WCAhCiE,EAAb,4MAgBI/D,MAAQ,CACJuD,KAAMS,KAAKC,MAAM,OAAAD,KAAKE,SAA+B,SAjB7D,EAoBIC,cAAgB,SAAAC,GACZ,IAAIC,EAAK9C,IAASC,YAClBW,QAAQC,IAAIiC,GAEZA,EAAG5C,WAAW,QAAQ6C,IAAI,CACtBC,QAAS,EAAKvE,MAAMuD,KAAKiB,WACzBX,MAAO,EAAKpE,MAAM6C,SAASuB,QAE1BpF,MAAK,SAACgG,GACHtC,QAAQC,IAAI,6BAA8BqC,EAAOC,OAEpDC,OAAM,SAACC,GACJzC,QAAQyC,MAAM,0BAA2BA,OAhCzD,uDAEI,WACIrC,SAASC,KAAKC,MAAMC,gBAAkB,kBAH9C,sBAKI,SAAUa,GAEN/D,KAAK2E,gBAEL3E,KAAKC,MAAMsD,QAAQC,KAAK,CACpBC,SAAU,qBACV9C,SAAUoD,MAXtB,oBAuCI,WAAU,IAAD,OACL,OAGI,sBAAKrE,UAAU,eAAf,UAEI,mDACA,mCAAOM,KAAKQ,MAAMuD,KAAlB,iBACA,yCAAY/D,KAAKC,MAAM6C,SAASuB,SAE5B,wBAAQ3E,UAAU,oBAAoBC,QAAU,kBAAM,EAAK2E,SAAS,EAAK9D,MAAMuD,OAA/E,0BAjDpB,GAAuC1D,IAAMC,WCkB7CyB,IAASsD,cATc,CACnBC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,8CAIF5D,IAASC,YAEHD,EAAf,EAFA,IAMa6D,EAAb,4JAGI,WACI,OACI,cAAC,IAAD,UACI,sBAAKlG,UAAU,eAAf,UACI,+BACI,6BACI,cAAC,IAAD,CAAMwE,GAAG,iBAAT,oBAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,qBAAT,oBAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,gCAAT,kCAIR,cAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,iBAAiBnE,UAAWmC,IAC9C,cAAC,IAAD,CAAOgC,KAAK,qBAAqBnE,UAAWpB,IAC5C,cAAC,IAAD,CAAOuF,KAAK,gCAAgCnE,UAAWyC,IACvD,cAAC,IAAD,CAAO0B,KAAK,iCAAiCnE,UAAW4C,aAtB5E,GAAyBlE,IAAMC,WCzB/ByF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlD,SAASmD,eAAe,SAM1BpH,M","file":"static/js/main.2a3b07b6.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const WordItem = ({title, showItemsDescription}) => {\n    return (\n            <div className=\"wordItem\" onClick={showItemsDescription}>\n                <h2 className=\"header\">{title}</h2>\n            </div>\n    );\n};\n\nexport const WordItemDescription = ({title, description, pronunciation }) => {\n\n    return (\n            <div className=\"itemDetail\">\n                <h1 className=\"header\">{title}</h1>\n                <h2 className=\"pronunciation\">{pronunciation}</h2>\n                <p className=\"descriptionItem\">Definition: {description}</p>\n            </div>\n    );\n};","import React from \"react\";\nimport {WordItem} from \"./WordItem\";\n\nexport class WordsList extends React.Component {\n\n    render() {\n        return (\n            <div className=\"wordList\" >\n        {this.props.contacts.map(this.props.wordTowordItem)}\n            </div>\n            )\n    }\n\n}","import {WordsList} from \"../WordsList\";\nimport React from \"react\";\nimport {WordItem, WordItemDescription} from \"../WordItem\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\n\nexport class GamePage extends React.Component {\n    state = {\n        contacts: [],\n        getWord: \"\",\n        getDetailsToThisWord: false,\n        gameCode: \"\",\n        lastSentence: \"\",\n        newSentence: \"\",\n        story: \"\"\n    };\n\n    componentDidMount() {\n        this.getNewWords()\n        this.getGameFromDB(this.props.location.gameCode)\n        document.body.style.backgroundColor = \"var(--red)\"\n\n    }\n\n\n\n    getJsonFromApi() {\n        fetch(\"https://random-words-api.vercel.app/word\")\n            .then(res => res.json())\n            .then(json =>\n            {this.setState({\n                    contacts: this.state.contacts.concat(json)\n                })}\n    );\n    }\n\n    getNewWords = (e) => {\n        this.setState({\n            contacts: [],\n            getDetailsToThisWord: false,\n        })\n        for (let i = 0; i < 2; i++) {\n        this.getJsonFromApi(true)\n        }\n    }\n\n    showItemsDescription = (e) => {\n        const index = this.getIndex(e.target.textContent)\n        const getWord = this.state.contacts[index]\n            this.setState({\n                getWord: getWord,\n                getDetailsToThisWord: true,\n            })\n    }\n\n    getIndex = (title) => {\n        return this.state.contacts.findIndex(obj => obj.word === title);\n    }\n\n    wordTowordItem  = (word, component) => {\n        const title = word.word;\n        const description = word.definition;\n        const pronunciation = word.pronunciation;\n\n        switch (component){\n            case \"WordItemDescription\" :\n                return <WordItemDescription title= {title} description={description} pronunciation={pronunciation}  />;\n            default:\n                return <WordItem key={title} title={title} showItemsDescription={this.showItemsDescription}/>;\n\n        }\n    }\n\n    getGameFromDB =  (codePIN)=> {\n    const unsub = firebase\n        .firestore()\n        .collection(\"game\")\n        .where('gamePIN', '==', codePIN)\n        .get()\n        .then(game => {\n            game.forEach((doc) => {\n\n              this.setState({\n                  gameCode: codePIN,\n                  lastSentence: doc.get(\"lastSentence\"),\n                  story: doc.get(\"story\")\n              })\n            });\n        })\n\n\n}\n\n    handleInput = (e) => {\n        this.setState({\n            newSentence: e.target.value\n        })\n    }\n\n    submitNewSentence = () => {\n\n        firebase\n            .firestore()\n            .collection(\"game\")\n            .doc(\"4AK30mT7WPidh0ldRU49\")\n            .update({\n           \"lastSentence\" : this.state.newSentence,\n                \"story\" :  this.state.story + \" \" + this.state.newSentence\n        })\n            .then(() => {\n                console.log(\"Document successfully updated!\");\n            });\n\n        this.navigateToHomePage()\n\n    }\n\n    navigateToHomePage() {\n        this.props.history.push({\n            pathname: '/make-a-story/'})\n    }\n\n    render() {\n        return (\n            <div className=\"gamePage\">\n\n                <div className=\"gamePageContainer\">\n                    <h1 className=\"gameCode\">{this.state.gameCode}</h1>\n                    <p>This is the last<br/> sentence someone wrote<br/> in your story &darr;</p>\n                    <h1 className=\"lastSentence\">{this.state.lastSentence}</h1>\n\n                    <div >\n                        {this.state.contacts.length === 2 ?   <WordsList contacts={this.state.contacts} wordTowordItem={this.wordTowordItem}  showItemsDescription={this.showItemsDescription} />\n                        : \"Loading...\" }\n\n                    </div>\n                </div>\n\n                    <div>\n                        {this.state.getDetailsToThisWord ?\n                            <div>\n                                {this.wordTowordItem(this.state.getWord, \"WordItemDescription\")}\n                            </div>  : \"\"}\n                    </div>\n                <div className=\"textArea\">\n                    <input placeholder=\"Write your sentence here... You must use the given words!\"\n                           value={this.state.newSentence}  onChange={(e) => {this.handleInput(e)}}/>\n\n                </div>\n\n                <button className=\"btn blue circular\" type=\"button\" onClick={this.submitNewSentence}>Done</button>\n\n            </div>\n        );\n    }\n\n\n\n}\n\n\n\n","import React from \"react\";\nimport '../App.css'\nimport {Link} from \"react-router-dom\";\nimport firebase from \"firebase\";\n\n\n\nexport class Home extends React.Component {\n\n    componentDidMount() {\n        document.body.style.backgroundColor = \"var(--orange)\"\n    }\n\n    state = {\n      code: \"\"\n    };\n\n    getDataFromDB =  (codePIN)=> {\n        const unsub = firebase\n            .firestore()\n            .collection(\"game\")\n            .where('gamePIN', '==', codePIN)\n            .get()\n            .then(game => {\n                game.forEach((doc) => {\n              this.navigateToGamePage(codePIN)\n                });\n            })\n            .then(\n                this.setState({\n                    code: \"Incorrect Game PIN\"\n                })\n            );\n    }\n\n    startGameWithCode (code){\n\n        if (this.state.code.length === 6) {\n        this.getDataFromDB(code)\n        } else {\n            this.setState({\n                code: \"Game PIN must contains 6 digits\"\n            })\n        }\n    }\n\n    navigateToGamePage = (codePIN) => {\n        this.props.history.push({\n            pathname: '/make-a-story/game',\n            gameCode: codePIN\n        })\n    }\n\n\n    handleInput(e) {\n        if (this.state.code === \"Game PIN must contains 6 digits\" || this.state.code === \"Incorrect Game PIN\")  {\n            this.setState({\n                code: \"\"\n            })\n        } else {\n\n            this.setState({\n                code: e.target.value\n            })\n        }\n    }\n\n    render() {\n        return (\n\n\n                <div className=\"home\">\n           <h1>WHAT HAPPENS NEXT?</h1>\n\n                    <p>\n                        Generate the code and share it with your friends to create a fun story together! You need to add a new sentence with two given words and complete What Happens Next?\n                        <br/>\n                        <br/>\n                        You can choose from 3 vocabulary levels - Beginner, Intermediate and Advanced.\n                        <br/>\n                        <br/>\n                        To make it harder you can only see the last sentence someone wrote, and when the story is complete you can read the whole thing.\n                        <br/>\n                        <br/>\n                        Improve your English and have fun!\n                    </p>\n\n\n                    <Link to=\"/make-a-story/create-new-game\">\n                    <button className=\"btn blue circular\"  >Create new game</button>\n                    </Link>\n                    <h3>Or do you already have code?</h3>\n                    <div className=\"gamePin\">\n\n                    <input placeholder=\"Game PIN\" value={this.state.code}  onClick={(e) => {this.handleInput(e)}} onChange={(e) => {this.handleInput(e)}}/>\n\n                    <button className=\"btn red  small\" onClick={ () => this.startGameWithCode(this.state.code)}>Enter</button>\n                    </div>\n\n                </div>\n\n\n\n        );\n    }\n\n\n}\n\n\n\n","import {Link, Redirect} from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\nimport React from \"react\";\n\n\nexport class CreateNewGamePage extends React.Component {\n\n\n\n    componentDidMount() {\n        document.body.style.backgroundColor = \"var(--orange)\"\n    }\n\n\n\n    goToCode (level){\n\n        this.props.history.push({\n            pathname: '/make-a-story/GameCodeViewPage',\n         level: level\n        })\n\n    }\n\n\n    render() {\n        return (\n\n\n            <div className=\"createNewGamePage\" >\n                <h1>Select your level</h1>\n\n                <div className=\"cardcircle\">\n\n                    <div className=\"circle orangeDarkGradient\"> </div>\n                    <div className=\"card orangeDark\">\n                        <p>You want to learn English\n                            <br/>\n                            and your current level\n                            <br/>\n                            is BASIC</p>\n                        <button onClick={ () => this.goToCode(\"Beginner\")}>Beginner</button>\n\n                    </div>\n                </div>\n\n                <div>\n\n                    <div className=\"circle redGradient\"> </div>\n                <div className=\"card red\">\n                    <p>You can speak English\n                        <br/>\n                        and want to practice\n                        <br/>\n                        with other people</p>\n\n\n                    <button onClick={ () => this.goToCode(\"Intermediate\")}>Intermediate</button>\n                </div>\n                </div>\n\n                <div>\n\n                    <div className=\"circle blueGradient\"> </div>\n                    <div className=\"card blue\">\n                        <p>You are PRO\n                            <br/>\n                            and you want to learn\n                            <br/>\n                            new, difficult words</p>\n                        <button onClick={ () => this.goToCode(\"Advanced\")}>Advanced</button>\n                    </div>\n                </div>\n            </div>\n\n\n\n        );\n    }\n\n\n\n}\n\n\n","import {Link} from \"react-router-dom\";\nimport React from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\n\nexport class GameCodeViewPage  extends React.Component {\n\n    componentDidMount() {\n        document.body.style.backgroundColor = \"var(--orange)\"\n    }\n    goToCode (code){\n\n        this.createNewGame()\n\n        this.props.history.push({\n            pathname: '/make-a-story/game',\n            gameCode: code\n        })\n\n    }\n\n    state = {\n        code: Math.floor(Math.random() * (999999 - 111111) + 111111)\n    }\n\n    createNewGame = event => {\n        var db = firebase.firestore();\n        console.log(db)\n\n        db.collection(\"game\").add({\n            gamePIN: this.state.code.toString(),\n            level: this.props.location.level\n        })\n            .then((docRef) => {\n                console.log(\"Document written with ID: \", docRef.id);\n            })\n            .catch((error) => {\n                console.error(\"Error adding document: \", error);\n            });\n\n    };\n\n\n\n    render() {\n        return (\n\n\n            <div className=\"GameCodeView\">\n\n                <h2>Your Game PIN is:</h2>\n                <h1> { this.state.code   }           </h1>\n                <h3>Level: {this.props.location.level}</h3>\n\n                    <button className=\"btn blue circular\" onClick={ () => this.goToCode(this.state.code)}>Start</button>\n\n            </div>\n\n\n\n        );\n    }\n\n\n\n}\n\n\n","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link,\n    Redirect\n} from 'react-router-dom';\nimport {GamePage} from \"./Pages/GamePage\";\nimport {Home} from \"./Pages/Home\";\nimport {CreateNewGamePage} from \"./Pages/CreateNewGamePage\";\nimport {GameCodeViewPage} from \"./Pages/GameCodeViewPage\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCwnpHYoYR1rqd79iASD08rTkS1gd6ZPkw\",\n    authDomain: \"make-a-story.firebaseapp.com\",\n    projectId: \"make-a-story\",\n    storageBucket: \"make-a-story.appspot.com\",\n    messagingSenderId: \"737035725955\",\n    appId: \"1:737035725955:web:4746258ce6d0a32312ffb6\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nvar db = firebase.firestore();\n\nexport default firebase;\n\n\n\nexport class App extends React.Component {\n\n\n    render() {\n        return (\n            <Router>\n                <div className=\"appContainer\">\n                    <ul>\n                        <li>\n                            <Link to=\"/make-a-story/\">Home</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/make-a-story/game\">Game</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/make-a-story/create-new-game\">Create new game</Link>\n                        </li>\n                    </ul>\n\n                    <Route exact path=\"/make-a-story/\" component={Home} />\n                    <Route path=\"/make-a-story/game\" component={GamePage} />\n                    <Route path=\"/make-a-story/create-new-game\" component={CreateNewGamePage} />\n                    <Route path=\"/make-a-story/GameCodeViewPage\" component={GameCodeViewPage}  />\n                </div>\n\n\n            </Router>\n\n        );\n    }\n\n\n\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {App} from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}