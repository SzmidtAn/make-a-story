{"version":3,"sources":["reportWebVitals.js","WordItem.js","WordsList.js","TextView.js","Pages/GamePage.js","Pages/Home.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","WordItem","title","showItemsDescription","className","onClick","WordItemDescription","description","pronunciation","WordsList","this","props","contacts","map","wordTowordItem","React","Component","TextView","placeholder","GamePage","state","getWord","getDetailsToThisWord","handleInputChange","e","setState","i","getJsonFromApi","index","getIndex","target","textContent","findIndex","obj","word","component","definition","document","body","style","backgroundColor","fetch","res","json","concat","type","Home","App","to","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.745a0584.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const WordItem = ({title, showItemsDescription}) => {\n    return (\n            <div className=\"wordItem\" onClick={showItemsDescription}>\n                <h2 className=\"header\">{title}</h2>\n            </div>\n    );\n};\n\nexport const WordItemDescription = ({title, description, pronunciation }) => {\n\n    return (\n            <div className=\"itemDetail\">\n                <h1 className=\"header\">{title}</h1>\n                <h2 className=\"pronunciation\">{pronunciation}</h2>\n                <p className=\"descriptionItem\">Definition: {description}</p>\n            </div>\n    );\n};","import React from \"react\";\nimport {WordItem} from \"./WordItem\";\n\nexport class WordsList extends React.Component {\n\n    render() {\n        return (\n            <div className=\"wordList\" >\n        {this.props.contacts.map(this.props.wordTowordItem)}\n            </div>\n            )\n    }\n\n}","import React from \"react\";\n\nexport class TextView extends React.Component {\n    render() {\n        return (\n            <div className=\"textArea\">\n                <input placeholder=\"Write your sentence here... You must to use given words!\" />\n            </div>\n        )\n    }\n}","import {WordsList} from \"../WordsList\";\nimport React from \"react\";\nimport {WordItem, WordItemDescription} from \"../WordItem\";\nimport {TextView} from \"../TextView\";\n\n\nexport class GamePage extends React.Component {\n    state = {\n        contacts: [],\n        getWord: \"\",\n        getDetailsToThisWord: false,\n    };\n\n    componentDidMount() {\n        this.handleInputChange()\n        document.body.style.backgroundColor = \"var(--red)\"\n\n    }\n\n    getJsonFromApi() {\n        fetch(\"https://random-words-api.vercel.app/word\")\n            .then(res => res.json())\n            .then(json =>\n            {this.setState({\n                    contacts: this.state.contacts.concat(json)\n                })}\n    );\n    }\n\n    handleInputChange = (e) => {\n        this.setState({\n            contacts: [],\n            getDetailsToThisWord: false,\n        })\n        for (let i = 0; i < 2; i++) {\n        this.getJsonFromApi(true)\n        }\n    }\n\n    showItemsDescription = (e) => {\n        const index = this.getIndex(e.target.textContent)\n        const getWord = this.state.contacts[index]\n            this.setState({\n                getWord: getWord,\n                getDetailsToThisWord: true,\n            })\n    }\n\n    getIndex = (title) => {\n        return this.state.contacts.findIndex(obj => obj.word === title);\n    }\n\n    wordTowordItem  = (word, component) => {\n        const title = word.word;\n        const description = word.definition;\n        const pronunciation = word.pronunciation;\n\n        switch (component){\n            case \"WordItemDescription\" :\n                return <WordItemDescription title= {title} description={description} pronunciation={pronunciation}  />;\n            default:\n                return <WordItem key={title} title={title} showItemsDescription={this.showItemsDescription}/>;\n\n        }\n    }\n\n\n    render() {\n        return (\n            <div className=\"gamePage\">\n\n                <div className=\"gamePageContainer\">\n                    <h1 className=\"lastSentence\">So we just had to show this shoes to this duck...</h1>\n\n                    <div >\n                 <WordsList contacts={this.state.contacts} wordTowordItem={this.wordTowordItem}  showItemsDescription={this.showItemsDescription} />\n\n                    </div>\n                </div>\n\n                    <div>\n                        {this.state.getDetailsToThisWord ?\n                            <div>\n                                {this.wordTowordItem(this.state.getWord, \"WordItemDescription\")}\n                            </div>  : \"\"}\n                    </div>\n                    <div>\n                        <TextView />\n                    </div>\n\n                <button className=\"btn blue circular\" type=\"button\">Done</button>\n\n            </div>\n        );\n    }\n\n\n\n}\n\n\n\n","import React from \"react\";\nimport '../App.css'\n\n\n\nexport class Home extends React.Component {\n\n    componentDidMount() {\n        document.body.style.backgroundColor = \"white\"\n    }\n\n    render() {\n        return (\n\n\n                <div className=\"home\">\n           <h1>WHAT HAPPENS NEXT?</h1>\n                    <p>Generat code and share then with  your friends to build a funny story together!\n                        You have to add a new sentence with two given words and complete What Happens Next?\n\n                        <br/>\n                        <br/>\n                        You can choose of 3 levels of vocabulary - beginner, medium and advanced.\n                        <br/>\n                        <br/>\n                        To make it difficult you can just see the last sentence someone made and when the story is complete, you can read the whole.\n                        <br/>\n                        <br/>\n                        Improve your English and have fun!\n                        </p>\n\n\n                    <button className=\"btn blue circular\">Get started</button>\n                    <h3>Or do you already have code?</h3>\n                    <h2>Please enter the code</h2>\n                    <input placeholder=\"1234 2345\" />\n                    <button className=\"  circular small\">Submit</button>\n\n                </div>\n\n\n\n        );\n    }\n\n\n\n}\n\n\n\n","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Link,\n    Redirect\n} from 'react-router-dom';\nimport {GamePage} from \"./Pages/GamePage\";\nimport {Home} from \"./Pages/Home\";\n\n\n\nexport class App extends React.Component {\n\n\n    render() {\n        return (\n            <Router>\n                <div className=\"appContainer\">\n                    <ul>\n                        <li>\n                            <Link to=\"/\">Home</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/game\">Game</Link>\n                        </li>\n                    </ul>\n\n                    <Route exact path=\"/\" component={Home} />\n                    <Route path=\"/game\" component={GamePage} />\n                </div>\n\n\n            </Router>\n\n        );\n    }\n\n\n\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {App} from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}